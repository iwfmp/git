#!/usr/bin/env ruby
# Encoding: utf-8
# Source: http://git-scm.com/book/en/Customizing-Git-An-Example-Git-Enforced-Policy#Server-Side-Hook
# Source: https://lists.fedoraproject.org/pipermail/devel/2013-September/189126.html

$oldrev, $newrev, $refname = STDIN.read.split(" ")
$user = ENV['USER']
$regex = /^([Ff]eat|[Ff]ix|[Dd]ocs|[Ss]tyle|[Rr]efactor|[Tt]est|[Cc]hore|[Ii]mprove|[Rr]evert)\(([a-zA-Z]+)\)\:(.{0,50})$/
$missed_revs = `git rev-list #{$oldrev}..#{$newrev}`.split("\n")
$errors = []

puts "Enforcing Policies... \n(#{$refname}) (#{$oldrev[0,6]}) (#{$newrev[0,6]})"

# -------------------------------------------------------------------------------------------------------------------------------------
# Enforce custom commit-message format rules
# -------------------------------------------------------------------------------------------------------------------------------------
def check_format_rules(rev, line_number, line)
  real_line_number = line_number + 1
  return "Commit #{rev[0,6]}, line #{real_line_number}: Summary line must be 70 characters or less." if line_number == 0 && line.length > 70
  return "Commit #{rev[0,6]}, line #{real_line_number}: Summary line syntax must be '<type>(<scope>): <subject>'" if line_number == 0 && !$regex.match(line)
  return "Commit #{rev[0,6]}, line #{real_line_number}: Second line should be empty." if line_number == 1 && line.length > 0
  (return "Commit #{rev[0,6]}, line #{real_line_number}: No line should be over 80 characters long." if line.length > 80) unless line[0,1]  == '#'
  false
end

def check_message_format
  missed_revs.each do |rev|
    message_file = `git cat-file commit #{rev} | sed '1,/^$/d'`.split("\n")
    message_file.each_with_index do |line, line_number|
      error = check_format_rules rev, line_number, line.strip
      $errors.push error if error
    end
  end
end
check_message_format

unless $errors.empty?
  puts '[POLICY] Invalid git commit message format.'
  $errors.each { |error| puts "#    #{error}" }
  exit 1
end

# -------------------------------------------------------------------------------------------------------------------------------------
# Force only merges on master branch - no direct commits
# -------------------------------------------------------------------------------------------------------------------------------------
is_merge_commit = `git rev-parse --verify --quiet $1^2 > /dev/null`

# -------------------------------------------------------------------------------------------------------------------------------------
# Allow merges on master only from version/* and hotfix/* branches
# -------------------------------------------------------------------------------------------------------------------------------------
# Force creating version/* and hotfix/* branches only from master (???)

# -------------------------------------------------------------------------------------------------------------------------------------
# Force only merge --rebase on version/* and hotfix/* branches
# -------------------------------------------------------------------------------------------------------------------------------------
is_merge_commit = `git rev-parse --verify --quiet $1^2 > /dev/null`

# -------------------------------------------------------------------------------------------------------------------------------------
# Allow push commits only to master, version/* and hotfix/* branches
# -------------------------------------------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------------------------------------------
# Hotfix/* branches merges back to master AND cherry-picked to version/*
# -------------------------------------------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------------------------------------------
# When version/*,hotfix/* is merged to master, it is automatically deleted and a tag with the version number is added
# -------------------------------------------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------------------------------------------
# Hotfix/* versioning format: 1.0.0-1
# -------------------------------------------------------------------------------------------------------------------------------------